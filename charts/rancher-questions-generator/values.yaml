# Default values for rancher-questions-generator
# This is a YAML-formatted file.

# Global settings
global:
  imagePullSecrets: []

# Backend configuration
backend:
  image:
    repository: golang
    tag: "1.21-alpine"
    pullPolicy: IfNotPresent
  
  replicas: 1
  
  service:
    type: ClusterIP
    port: 8080
    targetPort: 8080
  
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  
  env:
    - name: PORT
      value: "8080"
    - name: GIN_MODE
      value: "release"
  
  livenessProbe:
    httpGet:
      path: /api/health
      port: 8080
    initialDelaySeconds: 30
    periodSeconds: 10
  
  readinessProbe:
    httpGet:
      path: /api/health
      port: 8080
    initialDelaySeconds: 5
    periodSeconds: 5

# Frontend configuration
frontend:
  image:
    repository: nginx
    tag: "alpine"
    pullPolicy: IfNotPresent
  
  replicas: 1
  
  service:
    type: ClusterIP
    port: 80
    targetPort: 80
  
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi

# Load balancer configuration
loadBalancer:
  enabled: true
  service:
    type: LoadBalancer
    port: 80
    annotations: {}
    # cloud-specific annotations
    # service.beta.kubernetes.io/aws-load-balancer-type: nlb
    # service.beta.kubernetes.io/azure-load-balancer-internal: "true"

# Ingress configuration  
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
    - host: rancher-questions-generator.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: rancher-questions-generator-tls
  #    hosts:
  #      - rancher-questions-generator.local

# Persistence
persistence:
  enabled: false
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 1Gi

# Security context
securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 2000

# Pod security context
podSecurityContext:
  fsGroup: 2000

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Service account
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Pod annotations
podAnnotations: {}

# Pod labels
podLabels: {}

# Autoscaling
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Network policy
networkPolicy:
  enabled: false
  ingress: []
  egress: []