apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rancher-questions-generator.fullname" . }}-backend
  labels:
    {{- include "rancher-questions-generator.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.backend.replicas }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "rancher-questions-generator.backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "rancher-questions-generator.backend.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "rancher-questions-generator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      - name: copy-source
        image: alpine/git:latest
        command: ["sh"]
        args: 
          - "-c"
          - |
            if [ ! -d "/app/.git" ]; then
              git clone https://github.com/your-username/rancher-questions-generator.git /tmp/repo
              cp -r /tmp/repo/backend/* /app/
            fi
        volumeMounts:
        - name: source-code
          mountPath: /app
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
      containers:
      - name: backend
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
        imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
        command: ["sh"]
        args: ["-c", "cd /app && go mod tidy && go run cmd/main.go"]
        ports:
        - name: http
          containerPort: {{ .Values.backend.service.targetPort }}
          protocol: TCP
        {{- if .Values.backend.livenessProbe }}
        livenessProbe:
          {{- toYaml .Values.backend.livenessProbe | nindent 10 }}
        {{- end }}
        {{- if .Values.backend.readinessProbe }}
        readinessProbe:
          {{- toYaml .Values.backend.readinessProbe | nindent 10 }}
        {{- end }}
        resources:
          {{- toYaml .Values.backend.resources | nindent 10 }}
        env:
          {{- toYaml .Values.backend.env | nindent 10 }}
        volumeMounts:
        - name: source-code
          mountPath: /app
        {{- if .Values.persistence.enabled }}
        - name: data
          mountPath: /data
        {{- end }}
      volumes:
      - name: source-code
        emptyDir: {}
      {{- if .Values.persistence.enabled }}
      - name: data
        persistentVolumeClaim:
          claimName: {{ include "rancher-questions-generator.fullname" . }}-data
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}